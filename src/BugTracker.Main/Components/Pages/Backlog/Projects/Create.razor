@page "/Backlog/Projects/Create"

@using BugTracker.Main.Features.Backlog
@using BugTracker.Main.Features.Backlog.Data

@inject NavigationManager NavigationManager
@inject BacklogDbContext Db

<PageTitle>ساختن پروژه</PageTitle>

<h3>ساختن پروژه جدید</h3>

<div class="flex-grow-1 d-flex flex-column align-items-center justify-content-center">
    <div class="card">
        <div class="card-body">
            <EditForm Model="InputModel" FormName="BacklogProjectCreate" OnValidSubmit="HandleValidSubmit" class="d-flex flex-column gap-2">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div>
                    <label>
                        آیدی پروژه
                        <InputText @bind-Value="InputModel!.Key" required class="form-control" />
                    </label>
                </div>
                <button type="submit" class="btn btn-primary">بساز</button>
            </EditForm>
        </div>
    </div>
</div>

@code {

    [CascadingParameter] Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    [SupplyParameterFromForm]
    private FormModel? InputModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        InputModel ??= new();

        await Task.CompletedTask;
    }

    private async Task HandleValidSubmit()
    {
        if (AuthenticationStateTask is null)
            return;

        var authenticationState = await AuthenticationStateTask;
        var username = authenticationState.User.Identity?.Name;

        if (username is null)
            return;

        Project project = new() { OwnerKey = username, Key = InputModel.Key };
        project.OwnerKey = username;
        Db.Projects.Add(project);
        await Db.SaveChangesAsync();
        NavigationManager.NavigateTo("/Backlog");
    }

    class FormModel
    {
        public string Key { get; set; } = "";
    }
}