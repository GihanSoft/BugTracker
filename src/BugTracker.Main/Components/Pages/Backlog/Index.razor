@page "/Backlog"

@using BugTracker.Main.Features.Backlog
@using BugTracker.Main.Features.Backlog.Data
@using Microsoft.EntityFrameworkCore

@inject NavigationManager Navigation
@inject BacklogDbContext Db

<PageTitle>پروژه‌ها</PageTitle>

<div class="flex-grow-1 container d-flex flex-column gap-3">
    <h3>پروژه‌های من</h3>

    <div>
        <NavLink href="Backlog/Projects/Create" class="btn btn-primary">ایجاد پروژه جدید</NavLink>
    </div>

    @if (projects is null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!projects.Any())
    {
        <p>No projects found.</p>
    }
    else
    {
        <ul class="list-inline d-flex flex-column flex-sm-row flex-nowrap flex-sm-wrap gap-2 justify-content-around">
            @foreach (var project in projects)
            {
                <li>
                    @{
                        var link = $"/Backlog/{project.OwnerKey}/{project.Key}";
                    }

                    <NavLink href="@link" class="btn btn-outline-info w-100">@project.Key</NavLink>
                </li>
            }
        </ul>
    }
</div>

@code {
    private List<Project>? projects;

    [CascadingParameter] Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateTask is null)
            return;

        var authenticationState = await AuthenticationStateTask;
        var username = authenticationState.User.Identity?.Name;

        if (username is null)
            return;

        projects = await Db.Projects.Where(x => x.OwnerKey == username).ToListAsync();
    }
}